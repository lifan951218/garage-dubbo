<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lifan.order.mapper.OrderInfoMapper">
  <resultMap id="BaseResultMap" type="com.lifan.order.pojo.OrderInfo">
    <id column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="car_num" jdbcType="VARCHAR" property="carNum" />
    <result column="garage_num" jdbcType="INTEGER" property="garageNum" />
    <result column="action_time" jdbcType="VARCHAR" property="actionTime" />
    <result column="start_time" jdbcType="VARCHAR" property="startTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    order_id, username, car_num, garage_num, action_time, start_time
  </sql>
  <select id="selectByExample" parameterType="com.lifan.order.pojo.OrderInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_info
    where order_id = #{orderId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order_info
    where order_id = #{orderId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lifan.order.pojo.OrderInfoExample">
    delete from order_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lifan.order.pojo.OrderInfo">
    insert into order_info (order_id, username, car_num, 
      garage_num, action_time, start_time
      )
    values (#{orderId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{carNum,jdbcType=VARCHAR}, 
      #{garageNum,jdbcType=INTEGER}, #{actionTime,jdbcType=VARCHAR}, #{startTime,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lifan.order.pojo.OrderInfo">
    insert into order_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="carNum != null">
        car_num,
      </if>
      <if test="garageNum != null">
        garage_num,
      </if>
      <if test="actionTime != null">
        action_time,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="carNum != null">
        #{carNum,jdbcType=VARCHAR},
      </if>
      <if test="garageNum != null">
        #{garageNum,jdbcType=INTEGER},
      </if>
      <if test="actionTime != null">
        #{actionTime,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lifan.order.pojo.OrderInfoExample" resultType="java.lang.Long">
    select count(*) from order_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update order_info
    <set>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.carNum != null">
        car_num = #{record.carNum,jdbcType=VARCHAR},
      </if>
      <if test="record.garageNum != null">
        garage_num = #{record.garageNum,jdbcType=INTEGER},
      </if>
      <if test="record.actionTime != null">
        action_time = #{record.actionTime,jdbcType=VARCHAR},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update order_info
    set order_id = #{record.orderId,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      car_num = #{record.carNum,jdbcType=VARCHAR},
      garage_num = #{record.garageNum,jdbcType=INTEGER},
      action_time = #{record.actionTime,jdbcType=VARCHAR},
      start_time = #{record.startTime,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lifan.order.pojo.OrderInfo">
    update order_info
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="carNum != null">
        car_num = #{carNum,jdbcType=VARCHAR},
      </if>
      <if test="garageNum != null">
        garage_num = #{garageNum,jdbcType=INTEGER},
      </if>
      <if test="actionTime != null">
        action_time = #{actionTime,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=VARCHAR},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lifan.order.pojo.OrderInfo">
    update order_info
    set username = #{username,jdbcType=VARCHAR},
      car_num = #{carNum,jdbcType=VARCHAR},
      garage_num = #{garageNum,jdbcType=INTEGER},
      action_time = #{actionTime,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=VARCHAR}
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.lifan.order.pojo.OrderInfo">
    <id column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="car_num" jdbcType="VARCHAR" property="carNum" />
    <result column="garage_num" jdbcType="INTEGER" property="garageNum" />
    <result column="action_time" jdbcType="VARCHAR" property="actionTime" />
    <result column="start_time" jdbcType="VARCHAR" property="startTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    order_id, username, car_num, garage_num, action_time, start_time
  </sql>
  <select id="selectByExample" parameterType="com.lifan.order.pojo.OrderInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_info
    where order_id = #{orderId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order_info
    where order_id = #{orderId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lifan.order.pojo.OrderInfoExample">
    delete from order_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lifan.order.pojo.OrderInfo">
    insert into order_info (order_id, username, car_num, 
      garage_num, action_time, start_time
      )
    values (#{orderId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{carNum,jdbcType=VARCHAR}, 
      #{garageNum,jdbcType=INTEGER}, #{actionTime,jdbcType=VARCHAR}, #{startTime,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lifan.order.pojo.OrderInfo">
    insert into order_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="carNum != null">
        car_num,
      </if>
      <if test="garageNum != null">
        garage_num,
      </if>
      <if test="actionTime != null">
        action_time,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="carNum != null">
        #{carNum,jdbcType=VARCHAR},
      </if>
      <if test="garageNum != null">
        #{garageNum,jdbcType=INTEGER},
      </if>
      <if test="actionTime != null">
        #{actionTime,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lifan.order.pojo.OrderInfoExample" resultType="java.lang.Long">
    select count(*) from order_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update order_info
    <set>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.carNum != null">
        car_num = #{record.carNum,jdbcType=VARCHAR},
      </if>
      <if test="record.garageNum != null">
        garage_num = #{record.garageNum,jdbcType=INTEGER},
      </if>
      <if test="record.actionTime != null">
        action_time = #{record.actionTime,jdbcType=VARCHAR},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update order_info
    set order_id = #{record.orderId,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      car_num = #{record.carNum,jdbcType=VARCHAR},
      garage_num = #{record.garageNum,jdbcType=INTEGER},
      action_time = #{record.actionTime,jdbcType=VARCHAR},
      start_time = #{record.startTime,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lifan.order.pojo.OrderInfo">
    update order_info
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="carNum != null">
        car_num = #{carNum,jdbcType=VARCHAR},
      </if>
      <if test="garageNum != null">
        garage_num = #{garageNum,jdbcType=INTEGER},
      </if>
      <if test="actionTime != null">
        action_time = #{actionTime,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=VARCHAR},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lifan.order.pojo.OrderInfo">
    update order_info
    set username = #{username,jdbcType=VARCHAR},
      car_num = #{carNum,jdbcType=VARCHAR},
      garage_num = #{garageNum,jdbcType=INTEGER},
      action_time = #{actionTime,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=VARCHAR}
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
</mapper>